/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.vente;

import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
//import com.mycompany.vente.Page.pageSelectionProduit;

/**
 *
 * @author v.marques
 */
public class Accueil extends javax.swing.JFrame {

    public static String idPersonnel;
    public static String idClient;
    public static String idVente;
    public static String idProduit;
    public static Boolean FAdmin = false;
    public Boolean OKClient;
    public Boolean OKProduit;
    Administration Admin = new Administration();

    /**
     * Creates new form Accueil
     *
     * @throws java.sql.SQLException
     */
    public Accueil() throws SQLException {
        initComponents();
//        super.setTitle("Vente de Masque");
        setTitle("Vente de Masque");
        getPersonnel();
        
        selectionProduit1.afficherCategorieDansList();
        selectionProduit1.afficherProduitDansListAvecCategorie();
        selectionClient1.afficherClientDansList();
    }

    private void getPersonnel() {
        Page.classIdentification = new Identification();
        ResultSet Tuples = Page.classIdentification.getPersonnel();
        try {
//            System.out.println("ok.");
            while (Tuples.next()) {
                idPersonnel = Tuples.getString("idPersonnel");
                String y = Tuples.getString("idProfil");
                Integer X = Integer.parseInt(y);
                System.out.println("id profil =" + X);
                if (X == 1) {
                    FAdmin = true;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelProfilPersonnel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        selectionClient1 = new com.mycompany.vente.SelectionClient();
        jPanel2 = new javax.swing.JPanel();
        selectionProduit1 = new com.mycompany.vente.SelectionProduit();
        jButtonAdmin = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.add(selectionClient1);

        jTabbedPane1.addTab("Client", jPanel1);

        jPanel2.add(selectionProduit1);

        jTabbedPane1.addTab("Produit", jPanel2);

        jButtonAdmin.setText("Administration");
        jButtonAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdminActionPerformed(evt);
            }
        });

        jButton1.setText("Déconnexion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelProfilPersonnel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAdmin)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelProfilPersonnel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(490, 490, 490))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdminActionPerformed
        if (FAdmin == true) {
            Admin.show();
            this.show(false);
        }else{ JOptionPane.showMessageDialog(rootPane,"Impossible vous n'etes pas un Administrateur");}
        
    }//GEN-LAST:event_jButtonAdminActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        Page.pageConnexion.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Accueil().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * créer la tuple vente dans la bdd
     */
    private static void setVente() {
        System.out.println("--------------------------------------------------Debut de setVente---------------------------------------------------------");

        int i = 0;
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        System.out.println(format.format(date));
        if (SelectionClient.idClient != null & SelectionProduit.idProduit != null) {
            System.out.println("id client = " + SelectionClient.idClient);
        System.out.println("id Produit = " + SelectionProduit.idProduit);
        String sqlSetVente = "INSERT INTO `vente`(`dateVente`, `idClient`, `idPersonnel`) VALUES ('" + format.format(date) + "','" + SelectionClient.idClient + "','" + idPersonnel + "')";
        int TuplesSetVente = DaoSIO.getInstance().requeteAction(sqlSetVente);
        if (TuplesSetVente == 1) {
            System.out.println("Bien fait");
        }
        //on recupere la derniere vente faite
        String sqlSellectionVente = "SELECT * FROM vente WHERE idClient LIKE " + SelectionClient.idClient + " AND idPersonnel LIKE " + idPersonnel + " ORDER BY idVente DESC ";
        ResultSet TuplesSellectionVente = DaoSIO.getInstance().requeteSelection(sqlSellectionVente);
        try {
            while (TuplesSellectionVente.next() && i != 1) {
                i++;
                idVente = TuplesSellectionVente.getString("idVente");
                System.out.println("i = " + i);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SelectionProduit.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
        JOptionPane.showMessageDialog(null,"Il manque des informations pour la vente");
        }
        
        System.out.println("-------------------------------------------------Fin de setVente---------------------------------------------------------");
    }

    /**
     * nosu renvoye l'id du client selectionner
     *
     */
    public void getClient() {
        idClient = selectionClient1.idClient;
        idProduit = selectionProduit1.idProduit;
    }

    /**
     * Créer la tuple Comprendre dans la bdd
     */
    public static void setComprendre() {
        System.out.println("------------------------------------appel de la fonction setVente---------------------------------------------------");
        setVente();
        System.out.println("---------------------------------------------------debut de setComprendre-----------------------------------------------");
//on demande a la bdd tout de la vente entre client X et personnel X

        String sqlSetComprendre = "INSERT INTO `comprendre`(`idProduit`, `idVente`, `quantiter`) VALUES ('" + SelectionProduit.idProduit + "','" + idVente + "','" + SelectionProduit.quantiter + "')";
        int TuplesSetComprendre = DaoSIO.getInstance().requeteAction(sqlSetComprendre);
        if (TuplesSetComprendre == 1) {
            System.out.println("Bien fait pour la tuple Comprendre");
        }
        System.out.println("---------------------------------------------------fin de setComprendre-------------------------------------------------");
    }
    
    public static void setBonCommande(){
        System.out.println("-----------------------------------Appel de la fonction setComprendre--------------------------------------------");
        setComprendre();
        System.out.println("-------------------------------------Debut de setBonCommande----------------------------------------------------------------");
        String sqlSetBonCommande="INSERT INTO `bon_commande`(`facture`, `idVente`) VALUES ("+SelectionProduit.prixTotal+","+idVente+")";
        int TuplesSetBonCommande = DaoSIO.getInstance().requeteAction(sqlSetBonCommande);
        if (TuplesSetBonCommande == 1) {
            System.out.println("Bien fait pour la tuples bon commande");
        }
        System.out.println("-------------------------------------Fin de setBonCommande----------------------------------------------------------------");
    }
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdmin;
    private javax.swing.JLabel jLabelProfilPersonnel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.mycompany.vente.SelectionClient selectionClient1;
    private com.mycompany.vente.SelectionProduit selectionProduit1;
    // End of variables declaration//GEN-END:variables
}
